kind: Deployment
apiVersion: apps/v1
metadata:
  name: amq-clients-example
  labels:
    app: amq-clients-example
    app.kubernetes.io/component: amq-clients-example
    app.kubernetes.io/instance: amq-clients-example
    app.kubernetes.io/name: amq-clients-example
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-17-ubi8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: amq-clients-example
  template:
    metadata:
      labels:
        app: amq-clients-example
        deployment: amq-clients-example
    spec:
      containers:
        - name: amq-clients-example
          env:
           - name: WORK_TYPE
             value: CONSUMER
          image: 'image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/amq-clients-example:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
        - name: amq-producer
          env:
           - name: WORK_TYPE
             value: PRODUCER
          image: 'image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/amq-clients-example:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600